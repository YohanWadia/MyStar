// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const math = dart_sdk.math;
  const _engine = dart_sdk._engine;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const framework = flutter_sdk.src__widgets__framework;
  const scaffold = flutter_sdk.src__material__scaffold;
  const colors = flutter_sdk.src__material__colors;
  const basic = flutter_sdk.src__widgets__basic;
  const gesture_detector = flutter_sdk.src__widgets__gesture_detector;
  const implicit_animations = flutter_sdk.src__widgets__implicit_animations;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const box_border = flutter_sdk.src__painting__box_border;
  const box_shadow = flutter_sdk.src__painting__box_shadow;
  const binding = flutter_sdk.src__widgets__binding;
  const debug = flutter_sdk.src__foundation__debug;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const gradient = flutter_sdk.src__painting__gradient;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const decoration_image = flutter_sdk.src__painting__decoration_image;
  const decoration = flutter_sdk.src__painting__decoration;
  const image_provider = flutter_sdk.src__painting__image_provider;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var flutter_inset_box_shadow = Object.create(dart.library);
  var box_shadow$ = Object.create(dart.library);
  var box_decoration$ = Object.create(dart.library);
  var $toString = dartx.toString;
  var $length = dartx.length;
  var $_get = dartx._get;
  var $runtimeType = dartx.runtimeType;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    JSArrayOfBoxShadow: () => (T.JSArrayOfBoxShadow = dart.constFn(_interceptors.JSArray$(box_shadow$.BoxShadow)))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    ListOfBoxShadow: () => (T.ListOfBoxShadow = dart.constFn(core.List$(box_shadow$.BoxShadow)))(),
    ListNOfBoxShadow: () => (T.ListNOfBoxShadow = dart.constFn(dart.nullable(T.ListOfBoxShadow())))(),
    BoxDecorationN: () => (T.BoxDecorationN = dart.constFn(dart.nullable(box_decoration$.BoxDecoration)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: main.MyHomePage.prototype,
        [Widget_key]: null,
        [MyHomePage_title]: "Flutter Example App"
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 10,
        [OffsetBase__dx]: 10
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: ui.BlurStyle.prototype,
        [_Enum__name]: "normal",
        [_Enum_index]: 0
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: box_shadow$.BoxShadow.prototype,
        [Shadow_blurRadius]: 20,
        [Shadow_offset]: C[3] || CT.C3,
        [Shadow_color]: C[4] || CT.C4,
        [BoxShadow_blurStyle]: C[5] || CT.C5,
        [BoxShadow_spreadRadius]: 1,
        [BoxShadow_inset]: true
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: -10,
        [OffsetBase__dx]: -10
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290624957
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: box_shadow$.BoxShadow.prototype,
        [Shadow_blurRadius]: 20,
        [Shadow_offset]: C[7] || CT.C7,
        [Shadow_color]: C[8] || CT.C8,
        [BoxShadow_blurStyle]: C[5] || CT.C5,
        [BoxShadow_spreadRadius]: 1,
        [BoxShadow_inset]: true
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 3,
        [OffsetBase__dx]: 3
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: box_shadow$.BoxShadow.prototype,
        [Shadow_blurRadius]: 5,
        [Shadow_offset]: C[10] || CT.C10,
        [Shadow_color]: C[8] || CT.C8,
        [BoxShadow_blurStyle]: C[5] || CT.C5,
        [BoxShadow_spreadRadius]: 0.5,
        [BoxShadow_inset]: false
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: box_shadow$.BoxShadow.prototype,
        [Shadow_blurRadius]: 20,
        [Shadow_offset]: C[3] || CT.C3,
        [Shadow_color]: C[8] || CT.C8,
        [BoxShadow_blurStyle]: C[5] || CT.C5,
        [BoxShadow_spreadRadius]: 1,
        [BoxShadow_inset]: true
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: box_shadow$.BoxShadow.prototype,
        [Shadow_blurRadius]: 20,
        [Shadow_offset]: C[7] || CT.C7,
        [Shadow_color]: C[4] || CT.C4,
        [BoxShadow_blurStyle]: C[5] || CT.C5,
        [BoxShadow_spreadRadius]: 1,
        [BoxShadow_inset]: true
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: main.MyApp.prototype,
        [Widget_key]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278190080
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_Enum__name]: "rectangle",
        [_Enum_index]: 0
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: box_border.BoxShape.prototype,
        [_Enum__name]: "circle",
        [_Enum_index]: 1
      });
    }
  }, false);
  var C = Array(18).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "package:flutter_inset_box_shadow/src/box_shadow.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/flutter_inset_box_shadow-1.0.8/lib/src/box_decoration.dart",
    "package:flutter_inset_box_shadow/src/box_decoration.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  var Widget_key = dart.privateName(framework, "Widget.key");
  var MyHomePage_title = dart.privateName(main, "MyHomePage.title");
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({home: C[1] || CT.C1, debugShowCheckedModeBanner: false});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  const title$ = MyHomePage_title;
  main.MyHomePage = class MyHomePage extends framework.StatefulWidget {
    get title() {
      return this[title$];
    }
    set title(value) {
      super.title = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let title = opts && 'title' in opts ? opts.title : null;
      return new main.MyHomePage.new({key: key, title: title});
    }
    createState() {
      return new main._MyHomePageState.new();
    }
  };
  (main.MyHomePage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let title = opts && 'title' in opts ? opts.title : null;
    this[title$] = title;
    main.MyHomePage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyHomePage.prototype;
  dart.addTypeTests(main.MyHomePage);
  dart.addTypeCaches(main.MyHomePage);
  dart.setMethodSignature(main.MyHomePage, () => ({
    __proto__: dart.getMethods(main.MyHomePage.__proto__),
    createState: dart.fnType(framework.State$(main.MyHomePage), [])
  }));
  dart.setLibraryUri(main.MyHomePage, I[0]);
  dart.setFieldSignature(main.MyHomePage, () => ({
    __proto__: dart.getFields(main.MyHomePage.__proto__),
    title: dart.finalFieldType(core.String)
  }));
  var Shadow_blurRadius = dart.privateName(ui, "Shadow.blurRadius");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var Shadow_offset = dart.privateName(ui, "Shadow.offset");
  var Color_value = dart.privateName(ui, "Color.value");
  var Shadow_color = dart.privateName(ui, "Shadow.color");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var BoxShadow_blurStyle = dart.privateName(box_shadow, "BoxShadow.blurStyle");
  var BoxShadow_spreadRadius = dart.privateName(box_shadow, "BoxShadow.spreadRadius");
  var BoxShadow_inset = dart.privateName(box_shadow$, "BoxShadow.inset");
  main._MyHomePageState = class _MyHomePageState extends framework.State$(main.MyHomePage) {
    build(context) {
      return new scaffold.Scaffold.new({backgroundColor: colors.Colors.grey._get(300), body: new basic.Column.new({children: T.JSArrayOfWidget().of([new gesture_detector.GestureDetector.new({onTap: dart.fn(() => {
                this.setState(dart.fn(() => {
                  this.isON = !this.isON;
                }, T.VoidTovoid()));
              }, T.VoidTovoid()), child: new implicit_animations.AnimatedContainer.new({child: new icon.Icon.new(icons.Icons.bluetooth, {size: 75, color: this.isON ? new ui.Color.fromARGB(255, 90, 241, 168) : colors.Colors.grey}), duration: new core.Duration.new({milliseconds: 250}), height: 150, width: 150, decoration: new box_decoration$.BoxDecoration.new({color: colors.Colors.grey._get(300), shape: box_border.BoxShape.circle, boxShadow: this.isON ? T.JSArrayOfBoxShadow().of([C[2] || CT.C2, C[6] || CT.C6, C[9] || CT.C9]) : T.JSArrayOfBoxShadow().of([C[11] || CT.C11, C[12] || CT.C12])})})})])})});
    }
    static ['_#new#tearOff']() {
      return new main._MyHomePageState.new();
    }
  };
  (main._MyHomePageState.new = function() {
    this.isON = false;
    main._MyHomePageState.__proto__.new.call(this);
    ;
  }).prototype = main._MyHomePageState.prototype;
  dart.addTypeTests(main._MyHomePageState);
  dart.addTypeCaches(main._MyHomePageState);
  dart.setMethodSignature(main._MyHomePageState, () => ({
    __proto__: dart.getMethods(main._MyHomePageState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main._MyHomePageState, I[0]);
  dart.setFieldSignature(main._MyHomePageState, () => ({
    __proto__: dart.getFields(main._MyHomePageState.__proto__),
    isON: dart.fieldType(core.bool)
  }));
  main.main = function main$0() {
    binding.runApp(C[13] || CT.C13);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  const inset$ = BoxShadow_inset;
  box_shadow$.BoxShadow = class BoxShadow extends box_shadow.BoxShadow {
    get inset() {
      return this[inset$];
    }
    set inset(value) {
      super.inset = value;
    }
    static ['_#new#tearOff'](opts) {
      let color = opts && 'color' in opts ? opts.color : C[14] || CT.C14;
      let offset = opts && 'offset' in opts ? opts.offset : C[15] || CT.C15;
      let blurRadius = opts && 'blurRadius' in opts ? opts.blurRadius : 0;
      let spreadRadius = opts && 'spreadRadius' in opts ? opts.spreadRadius : 0;
      let blurStyle = opts && 'blurStyle' in opts ? opts.blurStyle : C[5] || CT.C5;
      let inset = opts && 'inset' in opts ? opts.inset : false;
      return new box_shadow$.BoxShadow.new({color: color, offset: offset, blurRadius: blurRadius, spreadRadius: spreadRadius, blurStyle: blurStyle, inset: inset});
    }
    scale(factor) {
      return new box_shadow$.BoxShadow.new({color: this.color, offset: this.offset['*'](factor), blurRadius: this.blurRadius * factor, spreadRadius: this.spreadRadius * factor, blurStyle: this.blurStyle, inset: this.inset});
    }
    static lerp(a, b, t) {
      if (a == null && b == null) {
        return null;
      }
      if (a == null) {
        return dart.nullCheck(b).scale(t);
      }
      if (b == null) {
        return a.scale(1 - t);
      }
      let blurStyle = a.blurStyle === ui.BlurStyle.normal ? b.blurStyle : a.blurStyle;
      if (a.inset !== b.inset) {
        return new box_shadow$.BoxShadow.new({color: box_shadow$.lerpColorWithPivot(a.color, b.color, t), offset: box_shadow$.lerpOffsetWithPivot(a.offset, b.offset, t), blurRadius: box_shadow$.lerpDoubleWithPivot(a.blurRadius, b.blurRadius, t), spreadRadius: box_shadow$.lerpDoubleWithPivot(a.spreadRadius, b.spreadRadius, t), blurStyle: blurStyle, inset: t >= 0.5 ? b.inset : a.inset});
      }
      return new box_shadow$.BoxShadow.new({color: dart.nullCheck(ui.Color.lerp(a.color, b.color, t)), offset: dart.nullCheck(ui.Offset.lerp(a.offset, b.offset, t)), blurRadius: dart.nullCheck(ui.lerpDouble(a.blurRadius, b.blurRadius, t)), spreadRadius: dart.nullCheck(ui.lerpDouble(a.spreadRadius, b.spreadRadius, t)), blurStyle: blurStyle, inset: b.inset});
    }
    static lerpList(a, b, t) {
      if (a == null && b == null) {
        return null;
      }
      a == null ? a = T.JSArrayOfBoxShadow().of([]) : null;
      b == null ? b = T.JSArrayOfBoxShadow().of([]) : null;
      let commonLength = math.min(core.int, a[$length], b[$length]);
      return (() => {
        let t0 = T.JSArrayOfBoxShadow().of([]);
        for (let i = 0; i < commonLength; i = i + 1)
          t0.push(dart.nullCheck(box_shadow$.BoxShadow.lerp(a[$_get](i), b[$_get](i), t)));
        for (let i = commonLength; i < a[$length]; i = i + 1)
          t0.push(a[$_get](i).scale(1 - t));
        for (let i = commonLength; i < b[$length]; i = i + 1)
          t0.push(b[$_get](i).scale(t));
        return t0;
      })();
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      if (!other[$runtimeType]._equals(this[$runtimeType])) {
        return false;
      }
      return box_shadow$.BoxShadow.is(other) && other.color._equals(this.color) && other.offset._equals(this.offset) && other.blurRadius === this.blurRadius && other.spreadRadius === this.spreadRadius && other.blurStyle === this.blurStyle && other.inset === this.inset;
    }
    get hashCode() {
      return ui.hashValues(this.color, this.offset, this.blurRadius, this.spreadRadius, this.blurStyle, this.inset);
    }
    toString() {
      return "BoxShadow(" + dart.str(this.color) + ", " + dart.str(this.offset) + ", " + debug.debugFormatDouble(this.blurRadius) + ", " + debug.debugFormatDouble(this.spreadRadius) + "), " + dart.str(this.blurStyle) + ", " + dart.str(this.inset) + ")";
    }
  };
  (box_shadow$.BoxShadow.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : C[14] || CT.C14;
    let offset = opts && 'offset' in opts ? opts.offset : C[15] || CT.C15;
    let blurRadius = opts && 'blurRadius' in opts ? opts.blurRadius : 0;
    let spreadRadius = opts && 'spreadRadius' in opts ? opts.spreadRadius : 0;
    let blurStyle = opts && 'blurStyle' in opts ? opts.blurStyle : C[5] || CT.C5;
    let inset = opts && 'inset' in opts ? opts.inset : false;
    this[inset$] = inset;
    box_shadow$.BoxShadow.__proto__.new.call(this, {color: color, offset: offset, blurRadius: blurRadius, spreadRadius: spreadRadius, blurStyle: blurStyle});
    ;
  }).prototype = box_shadow$.BoxShadow.prototype;
  dart.addTypeTests(box_shadow$.BoxShadow);
  dart.addTypeCaches(box_shadow$.BoxShadow);
  dart.setMethodSignature(box_shadow$.BoxShadow, () => ({
    __proto__: dart.getMethods(box_shadow$.BoxShadow.__proto__),
    scale: dart.fnType(box_shadow$.BoxShadow, [core.double])
  }));
  dart.setStaticMethodSignature(box_shadow$.BoxShadow, () => ['lerp', 'lerpList']);
  dart.setLibraryUri(box_shadow$.BoxShadow, I[1]);
  dart.setFieldSignature(box_shadow$.BoxShadow, () => ({
    __proto__: dart.getFields(box_shadow$.BoxShadow.__proto__),
    inset: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(box_shadow$.BoxShadow, ['_equals', 'toString']);
  dart.defineExtensionAccessors(box_shadow$.BoxShadow, ['hashCode']);
  box_shadow$.lerpDoubleWithPivot = function lerpDoubleWithPivot(a, b, t) {
    if (t < 0.5) {
      return dart.nullCheck(ui.lerpDouble(a, 0, t * 2));
    }
    return dart.nullCheck(ui.lerpDouble(0, b, (t - 0.5) * 2));
  };
  box_shadow$.lerpOffsetWithPivot = function lerpOffsetWithPivot(a, b, t) {
    if (t < 0.5) {
      return dart.nullCheck(ui.Offset.lerp(a, ui.Offset.zero, t * 2));
    }
    return dart.nullCheck(ui.Offset.lerp(ui.Offset.zero, b, (t - 0.5) * 2));
  };
  box_shadow$.lerpColorWithPivot = function lerpColorWithPivot(a, b, t) {
    let t1, t1$;
    if (t < 0.5) {
      return dart.nullCheck(ui.Color.lerp(a, (t1 = a, t1 == null ? null : t1.withOpacity(0)), t * 2));
    }
    return dart.nullCheck(ui.Color.lerp((t1$ = b, t1$ == null ? null : t1$.withOpacity(0)), b, (t - 0.5) * 2));
  };
  box_decoration$.BoxDecoration = class BoxDecoration extends box_decoration.BoxDecoration {
    static ['_#new#tearOff'](opts) {
      let color = opts && 'color' in opts ? opts.color : null;
      let image = opts && 'image' in opts ? opts.image : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let boxShadow = opts && 'boxShadow' in opts ? opts.boxShadow : null;
      let gradient = opts && 'gradient' in opts ? opts.gradient : null;
      let backgroundBlendMode = opts && 'backgroundBlendMode' in opts ? opts.backgroundBlendMode : null;
      let shape = opts && 'shape' in opts ? opts.shape : C[16] || CT.C16;
      return new box_decoration$.BoxDecoration.new({color: color, image: image, border: border, borderRadius: borderRadius, boxShadow: boxShadow, gradient: gradient, backgroundBlendMode: backgroundBlendMode, shape: shape});
    }
    copyWith(opts) {
      let t1, t1$, t1$0, t1$1, t1$2, t1$3, t1$4, t1$5;
      let color = opts && 'color' in opts ? opts.color : null;
      let image = opts && 'image' in opts ? opts.image : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let boxShadow = opts && 'boxShadow' in opts ? opts.boxShadow : null;
      let gradient = opts && 'gradient' in opts ? opts.gradient : null;
      let backgroundBlendMode = opts && 'backgroundBlendMode' in opts ? opts.backgroundBlendMode : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      if (!T.ListNOfBoxShadow().is(boxShadow)) dart.assertFailed(null, I[2], 40, 12, "boxShadow is List<BoxShadow>?");
      return new box_decoration$.BoxDecoration.new({color: (t1 = color, t1 == null ? this.color : t1), image: (t1$ = image, t1$ == null ? this.image : t1$), border: (t1$0 = border, t1$0 == null ? this.border : t1$0), borderRadius: (t1$1 = borderRadius, t1$1 == null ? this.borderRadius : t1$1), boxShadow: T.ListNOfBoxShadow().as((t1$2 = boxShadow, t1$2 == null ? this.boxShadow : t1$2)), gradient: (t1$3 = gradient, t1$3 == null ? this.gradient : t1$3), backgroundBlendMode: (t1$4 = backgroundBlendMode, t1$4 == null ? this.backgroundBlendMode : t1$4), shape: (t1$5 = shape, t1$5 == null ? this.shape : t1$5)});
    }
    scale(factor) {
      let t1;
      return new box_decoration$.BoxDecoration.new({color: ui.Color.lerp(null, this.color, factor), image: this.image, border: box_border.BoxBorder.lerp(null, this.border, factor), borderRadius: border_radius.BorderRadiusGeometry.lerp(null, this.borderRadius, factor), boxShadow: box_shadow$.BoxShadow.lerpList(null, T.ListOfBoxShadow().as(this.boxShadow), factor), gradient: (t1 = this.gradient, t1 == null ? null : t1.scale(factor)), shape: this.shape});
    }
    lerpFrom(a, t) {
      if (a == null) return this.scale(t);
      if (box_decoration$.BoxDecoration.is(a)) return box_decoration$.BoxDecoration.lerp(a, this, t);
      return T.BoxDecorationN().as(super.lerpFrom(a, t));
    }
    lerpTo(b, t) {
      if (b == null) return this.scale(1 - t);
      if (box_decoration$.BoxDecoration.is(b)) return box_decoration$.BoxDecoration.lerp(this, b, t);
      return T.BoxDecorationN().as(super.lerpTo(b, t));
    }
    static lerp(a, b, t) {
      if (a == null && b == null) {
        return null;
      }
      if (a == null) {
        return dart.nullCheck(b).scale(t);
      }
      if (b == null) {
        return a.scale(1 - t);
      }
      if (t === 0) {
        return a;
      }
      if (t === 1) {
        return b;
      }
      return new box_decoration$.BoxDecoration.new({color: ui.Color.lerp(a.color, b.color, t), image: t < 0.5 ? a.image : b.image, border: box_border.BoxBorder.lerp(a.border, b.border, t), borderRadius: border_radius.BorderRadiusGeometry.lerp(a.borderRadius, b.borderRadius, t), boxShadow: box_shadow$.BoxShadow.lerpList(T.ListOfBoxShadow().as(a.boxShadow), T.ListOfBoxShadow().as(b.boxShadow), t), gradient: gradient.Gradient.lerp(a.gradient, b.gradient, t), shape: t < 0.5 ? a.shape : b.shape});
    }
    createBoxPainter(onChanged = null) {
      if (!(onChanged != null || this.image == null)) dart.assertFailed(null, I[2], 142, 12, "onChanged != null || image == null");
      return new box_decoration$._InsetBoxDecorationPainter.new(this, onChanged);
    }
  };
  (box_decoration$.BoxDecoration.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let boxShadow = opts && 'boxShadow' in opts ? opts.boxShadow : null;
    let gradient = opts && 'gradient' in opts ? opts.gradient : null;
    let backgroundBlendMode = opts && 'backgroundBlendMode' in opts ? opts.backgroundBlendMode : null;
    let shape = opts && 'shape' in opts ? opts.shape : C[16] || CT.C16;
    box_decoration$.BoxDecoration.__proto__.new.call(this, {color: color, border: border, borderRadius: borderRadius, boxShadow: boxShadow, gradient: gradient, backgroundBlendMode: backgroundBlendMode, shape: shape});
    ;
  }).prototype = box_decoration$.BoxDecoration.prototype;
  dart.addTypeTests(box_decoration$.BoxDecoration);
  dart.addTypeCaches(box_decoration$.BoxDecoration);
  dart.setMethodSignature(box_decoration$.BoxDecoration, () => ({
    __proto__: dart.getMethods(box_decoration$.BoxDecoration.__proto__),
    copyWith: dart.fnType(box_decoration$.BoxDecoration, [], {backgroundBlendMode: dart.nullable(ui.BlendMode), border: dart.nullable(box_border.BoxBorder), borderRadius: dart.nullable(border_radius.BorderRadiusGeometry), boxShadow: dart.nullable(core.List$(box_shadow.BoxShadow)), color: dart.nullable(ui.Color), gradient: dart.nullable(gradient.Gradient), image: dart.nullable(decoration_image.DecorationImage), shape: dart.nullable(box_border.BoxShape)}, {}),
    scale: dart.fnType(box_decoration$.BoxDecoration, [core.double]),
    lerpFrom: dart.fnType(dart.nullable(box_decoration$.BoxDecoration), [dart.nullable(decoration.Decoration), core.double]),
    lerpTo: dart.fnType(dart.nullable(box_decoration$.BoxDecoration), [dart.nullable(decoration.Decoration), core.double])
  }));
  dart.setStaticMethodSignature(box_decoration$.BoxDecoration, () => ['lerp']);
  dart.setLibraryUri(box_decoration$.BoxDecoration, I[3]);
  var _cachedBackgroundPaint = dart.privateName(box_decoration$, "_cachedBackgroundPaint");
  var _rectForCachedBackgroundPaint = dart.privateName(box_decoration$, "_rectForCachedBackgroundPaint");
  var _imagePainter = dart.privateName(box_decoration$, "_imagePainter");
  var _decoration$ = dart.privateName(box_decoration$, "_decoration");
  var _getBackgroundPaint = dart.privateName(box_decoration$, "_getBackgroundPaint");
  var _paintBox = dart.privateName(box_decoration$, "_paintBox");
  var _paintOuterShadows = dart.privateName(box_decoration$, "_paintOuterShadows");
  var _paintBackgroundColor = dart.privateName(box_decoration$, "_paintBackgroundColor");
  var _paintBackgroundImage = dart.privateName(box_decoration$, "_paintBackgroundImage");
  var _paintInnerShadows = dart.privateName(box_decoration$, "_paintInnerShadows");
  box_decoration$._InsetBoxDecorationPainter = class _InsetBoxDecorationPainter extends decoration.BoxPainter {
    static ['_#new#tearOff'](_decoration, onChanged) {
      return new box_decoration$._InsetBoxDecorationPainter.new(_decoration, onChanged);
    }
    [_getBackgroundPaint](rect, textDirection) {
      if (!(this[_decoration$].gradient != null || this[_rectForCachedBackgroundPaint] == null)) dart.assertFailed(null, I[2], 160, 9, "_decoration.gradient != null || _rectForCachedBackgroundPaint == null");
      if (this[_cachedBackgroundPaint] == null || this[_decoration$].gradient != null && !dart.equals(this[_rectForCachedBackgroundPaint], rect)) {
        let paint = ui.Paint.new();
        if (this[_decoration$].backgroundBlendMode != null) {
          paint.blendMode = dart.nullCheck(this[_decoration$].backgroundBlendMode);
        }
        if (this[_decoration$].color != null) paint.color = dart.nullCheck(this[_decoration$].color);
        if (this[_decoration$].gradient != null) {
          paint.shader = dart.nullCheck(this[_decoration$].gradient).createShader(rect, {textDirection: textDirection});
          this[_rectForCachedBackgroundPaint] = rect;
        }
        this[_cachedBackgroundPaint] = paint;
      }
      return dart.nullCheck(this[_cachedBackgroundPaint]);
    }
    [_paintBox](canvas, rect, paint, textDirection) {
      switch (this[_decoration$].shape) {
        case C[17] || CT.C17:
          {
            if (!(this[_decoration$].borderRadius == null)) dart.assertFailed(null, I[2], 187, 16, "_decoration.borderRadius == null");
            let center = rect.center;
            let radius = rect.shortestSide / 2;
            canvas.drawCircle(center, radius, paint);
            break;
          }
        case C[16] || CT.C16:
          {
            if (this[_decoration$].borderRadius == null) {
              canvas.drawRect(rect, paint);
            } else {
              canvas.drawRRect(dart.nullCheck(this[_decoration$].borderRadius).resolve(textDirection).toRRect(rect), paint);
            }
            break;
          }
      }
    }
    [_paintOuterShadows](canvas, rect, textDirection) {
      if (this[_decoration$].boxShadow == null) {
        return;
      }
      for (let boxShadow of dart.nullCheck(this[_decoration$].boxShadow)) {
        if (box_shadow$.BoxShadow.is(boxShadow)) {
          if (boxShadow.inset) {
            continue;
          }
        }
        let paint = boxShadow.toPaint();
        let bounds = rect.shift(boxShadow.offset).inflate(boxShadow.spreadRadius);
        this[_paintBox](canvas, bounds, paint, textDirection);
      }
    }
    [_paintBackgroundColor](canvas, rect, textDirection) {
      if (this[_decoration$].color != null || this[_decoration$].gradient != null) {
        this[_paintBox](canvas, rect, this[_getBackgroundPaint](rect, textDirection), textDirection);
      }
    }
    [_paintBackgroundImage](canvas, rect, configuration) {
      let t1, t1$;
      if (this[_decoration$].image == null) return;
      this[_imagePainter] == null ? this[_imagePainter] = dart.nullCheck(this[_decoration$].image).createPainter(dart.nullCheck(this.onChanged)) : null;
      let clipPath = null;
      switch (this[_decoration$].shape) {
        case C[17] || CT.C17:
          {
            if (!(this[_decoration$].borderRadius == null)) dart.assertFailed(null, I[2], 249, 16, "_decoration.borderRadius == null");
            let center = rect.center;
            let radius = rect.shortestSide / 2;
            let square = new ui.Rect.fromCircle({center: center, radius: radius});
            clipPath = (t1 = ui.Path.new(), (() => {
              t1.addOval(square);
              return t1;
            })());
            break;
          }
        case C[16] || CT.C16:
          {
            if (this[_decoration$].borderRadius != null) {
              clipPath = (t1$ = ui.Path.new(), (() => {
                t1$.addRRect(dart.nullCheck(this[_decoration$].borderRadius).resolve(configuration.textDirection).toRRect(rect));
                return t1$;
              })());
            }
            break;
          }
      }
      dart.nullCheck(this[_imagePainter]).paint(canvas, rect, clipPath, configuration);
    }
    [_paintInnerShadows](canvas, rect, textDirection) {
      let t1, t1$, t1$0;
      if (this[_decoration$].boxShadow == null) {
        return;
      }
      for (let boxShadow of dart.nullCheck(this[_decoration$].boxShadow)) {
        if (!box_shadow$.BoxShadow.is(boxShadow) || !boxShadow.inset) {
          continue;
        }
        let color = boxShadow.color;
        let borderRadiusGeometry = (t1 = this[_decoration$].borderRadius, t1 == null ? this[_decoration$].shape === box_border.BoxShape.circle ? new border_radius.BorderRadius.circular(rect.longestSide) : border_radius.BorderRadius.zero : t1);
        let borderRadius = borderRadiusGeometry.resolve(textDirection);
        let clipRRect = borderRadius.toRRect(rect);
        let innerRect = rect.deflate(boxShadow.spreadRadius);
        if (innerRect.isEmpty) {
          let paint = (t1$ = ui.Paint.new(), (() => {
            t1$.color = color;
            return t1$;
          })());
          canvas.drawRRect(clipRRect, paint);
        }
        let innerRRect = borderRadius.toRRect(innerRect);
        canvas.save();
        canvas.clipRRect(clipRRect);
        let outerRect = box_decoration$._areaCastingShadowInHole(rect, boxShadow);
        canvas.drawDRRect(new ui.RRect.fromRectAndRadius(outerRect, ui.Radius.zero), innerRRect.shift(boxShadow.offset), (t1$0 = ui.Paint.new(), (() => {
          t1$0.color = color;
          t1$0.colorFilter = new _engine.EngineColorFilter.mode(color, ui.BlendMode.srcIn);
          t1$0.maskFilter = new ui.MaskFilter.blur(ui.BlurStyle.normal, boxShadow.blurSigma);
          return t1$0;
        })()));
        canvas.restore();
      }
    }
    dispose() {
      let t1;
      t1 = this[_imagePainter];
      t1 == null ? null : t1.dispose();
      super.dispose();
    }
    paint(canvas, offset, configuration) {
      let t2, t1;
      if (!(configuration.size != null)) dart.assertFailed(null, I[2], 324, 12, "configuration.size != null");
      let rect = offset['&'](dart.nullCheck(configuration.size));
      let textDirection = configuration.textDirection;
      this[_paintOuterShadows](canvas, rect, textDirection);
      this[_paintBackgroundColor](canvas, rect, textDirection);
      this[_paintBackgroundImage](canvas, rect, configuration);
      this[_paintInnerShadows](canvas, rect, textDirection);
      t1 = this[_decoration$].border;
      t1 == null ? null : t1.paint(canvas, rect, {shape: this[_decoration$].shape, borderRadius: (t2 = this[_decoration$].borderRadius, t2 == null ? null : t2.resolve(textDirection)), textDirection: configuration.textDirection});
    }
    toString() {
      return "_InsetBoxDecorationPainter for " + dart.str(this[_decoration$]);
    }
  };
  (box_decoration$._InsetBoxDecorationPainter.new = function(_decoration, onChanged) {
    this[_cachedBackgroundPaint] = null;
    this[_rectForCachedBackgroundPaint] = null;
    this[_imagePainter] = null;
    this[_decoration$] = _decoration;
    box_decoration$._InsetBoxDecorationPainter.__proto__.new.call(this, onChanged);
    ;
  }).prototype = box_decoration$._InsetBoxDecorationPainter.prototype;
  dart.addTypeTests(box_decoration$._InsetBoxDecorationPainter);
  dart.addTypeCaches(box_decoration$._InsetBoxDecorationPainter);
  dart.setMethodSignature(box_decoration$._InsetBoxDecorationPainter, () => ({
    __proto__: dart.getMethods(box_decoration$._InsetBoxDecorationPainter.__proto__),
    [_getBackgroundPaint]: dart.fnType(ui.Paint, [ui.Rect, dart.nullable(ui.TextDirection)]),
    [_paintBox]: dart.fnType(dart.void, [ui.Canvas, ui.Rect, ui.Paint, dart.nullable(ui.TextDirection)]),
    [_paintOuterShadows]: dart.fnType(dart.void, [ui.Canvas, ui.Rect, dart.nullable(ui.TextDirection)]),
    [_paintBackgroundColor]: dart.fnType(dart.void, [ui.Canvas, ui.Rect, dart.nullable(ui.TextDirection)]),
    [_paintBackgroundImage]: dart.fnType(dart.void, [ui.Canvas, ui.Rect, image_provider.ImageConfiguration]),
    [_paintInnerShadows]: dart.fnType(dart.void, [ui.Canvas, ui.Rect, dart.nullable(ui.TextDirection)]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Offset, image_provider.ImageConfiguration])
  }));
  dart.setLibraryUri(box_decoration$._InsetBoxDecorationPainter, I[3]);
  dart.setFieldSignature(box_decoration$._InsetBoxDecorationPainter, () => ({
    __proto__: dart.getFields(box_decoration$._InsetBoxDecorationPainter.__proto__),
    [_decoration$]: dart.finalFieldType(box_decoration$.BoxDecoration),
    [_cachedBackgroundPaint]: dart.fieldType(dart.nullable(ui.Paint)),
    [_rectForCachedBackgroundPaint]: dart.fieldType(dart.nullable(ui.Rect)),
    [_imagePainter]: dart.fieldType(dart.nullable(decoration_image.DecorationImagePainter))
  }));
  dart.defineExtensionMethods(box_decoration$._InsetBoxDecorationPainter, ['toString']);
  box_decoration$._areaCastingShadowInHole = function _areaCastingShadowInHole(holeRect, shadow) {
    let bounds = holeRect;
    bounds = bounds.inflate(shadow.blurRadius);
    if (shadow.spreadRadius < 0) {
      bounds = bounds.inflate(-shadow.spreadRadius);
    }
    let offsetBounds = bounds.shift(shadow.offset);
    return box_decoration$._unionRects(bounds, offsetBounds);
  };
  box_decoration$._unionRects = function _unionRects(a, b) {
    if (a.isEmpty) {
      return b;
    }
    if (b.isEmpty) {
      return a;
    }
    let left = math.min(core.double, a.left, b.left);
    let top = math.min(core.double, a.top, b.top);
    let right = math.max(core.double, a.right, b.right);
    let bottom = math.max(core.double, a.bottom, b.bottom);
    return new ui.Rect.fromLTRB(left, top, right, bottom);
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:flutter_inset_box_shadow/flutter_inset_box_shadow.dart": flutter_inset_box_shadow,
    "package:flutter_inset_box_shadow/src/box_shadow.dart": box_shadow$,
    "package:flutter_inset_box_shadow/src/box_decoration.dart": box_decoration$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_inset_box_shadow-1.0.8/lib/src/box_shadow.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_inset_box_shadow-1.0.8/lib/src/box_decoration.dart"],"names":[],"mappings":"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    flutter_inset_box_shadow: flutter_inset_box_shadow,
    src__box_shadow: box_shadow$,
    src__box_decoration: box_decoration$
  };
}));

//# sourceMappingURL=main.js.map
